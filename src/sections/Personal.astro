---
import { getLangFromUrl, useTranslations } from '@/i18n/utils'

import Sun from "@/assets/symbols/Sun.astro"
import Moon from "@/assets/symbols/Moon.astro"
import Computer from "@/assets/symbols/Computer.astro"
import LinkedIn from "@/assets/rrss/LinkedIn.astro"
import CV from "@/assets/rrss/CV.astro"
import Gmail from "@/assets/rrss/Gmail.astro"

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)

const actualLang = t('lang')
const nextLang = t('nextLang')
---

<section id="personal">

  <div class="flex item-center justify-between text-[#737373]">
    <h4 class="">Welcome</h4>

    <div class="flex items-center justify-center space-x-3">
      <a href={`/${nextLang}`}>
        <button id="languageBtn" class="uppercase">{actualLang}</button>
      </a>
      <p>|</p>
      <div class="h-full flex items-center justify-center gap-x-2">
        <button id="light-theme-button">
          <Sun class="size-4" />
        </button>
        <button id="dark-theme-button">
          <Moon class="size-4" />
        </button>
        <button id="system-theme-button">
          <Computer class="size-4" />
        </button>
      </div>
    </div>
  </div>

  <div class="p-6 mx-10 space-y-4">
      <p class="text-lg">
        I'm <span class="font-bold text-xl">Albert Lanza</span>, a fullstack web developer from Barcelona with +2 years of experience.
        Passionate about databases, UI/UX design, and building open-source software.
      </p>
      <div class="flex flex-col w-fit p-2 border rounded-[6px] border-[#262626] space-y-4">
        <a href="">
          <LinkedIn class="group size-6 hover:scale-105" />
        </a>
        <a href="">
          <CV class="group size-6 hover:scale-105" />
        </a>
        <a href="">
          <Gmail class="group size-6 hover:scale-105" />
        </a>
      </div>
  </div>

</section>

<style>
  button:hover {
    color: white;
   }
</style>

<script>
  // import Astro from 'assets/services/noop'

  const $ = (el: string): HTMLElement | null => document.querySelector(el)
  const $lightThemeBtn = $(`#light-theme-button`)
  const $darkThemeBtn = $(`#dark-theme-button`)
  const $systemThemeBtn = $(`#system-theme-button`)

  function toggleTheme(dark: boolean) {
    dark ? document.body.classList.add("dark") : document.body.classList.remove("dark")
  }

  $lightThemeBtn?.addEventListener("click", () => {
    localStorage.setItem("theme", "light")
    toggleTheme(false)
  })

  $darkThemeBtn?.addEventListener("click", () => {
    localStorage.setItem("theme", "dark")
    toggleTheme(true)
  })

  $systemThemeBtn?.addEventListener("click", () => {
    localStorage.setItem("theme", "system")
    toggleTheme(window.matchMedia("(prefers-color-scheme: dark)").matches)
  })
</script>