---
import '@/styles/markdownContent.css'
import LanguageAndThemeSelector from '@/components/LanguageAndThemeSelector.astro'
import PostLayout from '@/layouts/PostLayout.astro'
import { getCollection, render } from 'astro:content'
import { prepareCorrectVariousRoutesPaths } from '@/data/prepareCorrectRoutePaths'

export async function getStaticPaths() {
  const posts = await getCollection('posts')
  const paths = prepareCorrectVariousRoutesPaths(posts)
  return paths
}

const posts = await getCollection('posts')
const { pageLang, postIdTitle } = Astro.params
const [id] = postIdTitle.split('/')[0]
const post = posts.find(
  (post) => post.data.id === Number(id) && post.data.language === pageLang
) as (typeof posts)[0]

const { Content } = await render(post)
---

<PostLayout
  class={`
bg-section-bg-light dark:bg-section-bg-dark
  relative
`}
>
  <article
    id='post'
    data-tag=`post-${post.data.tag}`
    class={`
    relative overflow-hidden
  `}
  >
    <div class='flex flex-col items-center justify-center mb-12'>
      <h1
        class={`
        text-primary-light dark:text-primary-dark
        font-semibold text-2xl text-center pt-[4rem] md:pt-0
      `}
      >
        {post.data.title}
      </h1>
      <p
        class={`
        text-primary-light dark:text-primary-dark
        italic
      `}
      >
        {post.data.description}
      </p>
      <h3
        transition:name={postIdTitle}
        class={`
          text-secondary-light dark:text-tertiary-dark  
          absolute top-0 left-0 p-8 cust-font font-bold opacity-50 group-hover:opacity-100 text-6xl z-0
        `}
      >
        {id}
      </h3>
    </div>

    <div id='content'>
      <Content />
      <footer
        class={`
        text-tertiary-light dark:text-tertiary-dark
        pt-4 pb-2 px-8 flex justify-between items-center
      `}
      >
        <button class='opacity-65 hover:opacity-100 hover:font-semibold'>
          Share
        </button>
        <p class='font-bold'>@{post.data.author}</p>
        <button
          id='scrollToTop'
          class='opacity-65 hover:opacity-100 hover:font-semibold'
        >
          Up
        </button>
      </footer>
    </div>

    <div class='absolute top-0 right-0 p-6'>
      <LanguageAndThemeSelector path={`/posts/`} />
    </div>
  </article>
</PostLayout>

<script>
  const $ = (el: string): HTMLElement | null => document.querySelector(el)
  const $scrollToTop = $(`#scrollToTop`)

  if ($scrollToTop) {
    $scrollToTop.addEventListener('click', () => {
      window.scrollTo({
        top: 0,
        behavior: 'smooth',
      })
    })
  }

  import { blogCardAssignColor } from '@/data/blogCardAssignColor'
  import { toggleBkgGradient } from '@/data/toggleBkgGradient'

  toggleBkgGradient('id', 'post', blogCardAssignColor, {
    dark: 'bg-gradient-to-b to-[120px] to-[#171717]',
    light: 'bg-gradient-to-b to-[120px] to-[#EBECF0]',
  })
</script>
