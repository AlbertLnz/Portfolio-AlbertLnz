---
import { getLangFromUrl, useTranslations } from '@/i18n/utils'
import Sun from "@/assets/symbols/Sun.astro"
import Moon from "@/assets/symbols/Moon.astro"
import Computer from "@/assets/symbols/Computer.astro"

const lang = getLangFromUrl(Astro.url)
const t = useTranslations(lang)

const { path } = Astro.props

const actualLang = t('lang')
const nextLang = t('nextLang')
---

<div class="flex items-center justify-center space-x-3">
  <a href={`/${nextLang}${path}`}>
    <button id="languageBtn" class="uppercase">{actualLang}</button>
  </a>
  <p>|</p>
  <div class="h-full flex items-center justify-center gap-x-2">
    <button id="light-theme-button">
      <Sun class="size-4" />
    </button>
    <button id="dark-theme-button">
      <Moon class="size-4" />
    </button>
    <button id="system-theme-button">
      <Computer class="size-4" />
    </button>
  </div>
</div>

<script>
  document.addEventListener('astro:page-load', () => {
    const $ = (el: string): HTMLElement | null => document.querySelector(el)
    const $lightThemeBtn = $(`#light-theme-button`)
    const $darkThemeBtn = $(`#dark-theme-button`)
    const $systemThemeBtn = $(`#system-theme-button`)
  
    function toggleTheme(dark: boolean) {
      dark ? document.body.classList.add("dark") : document.body.classList.remove("dark")
    }
  
    $lightThemeBtn?.addEventListener("click", () => {
      localStorage.setItem("theme", "light")
      toggleTheme(false)
    })
  
    $darkThemeBtn?.addEventListener("click", () => {
      localStorage.setItem("theme", "dark")
      toggleTheme(true)
    })
  
    $systemThemeBtn?.addEventListener("click", () => {
      localStorage.setItem("theme", "system")
      toggleTheme(window.matchMedia("(prefers-color-scheme: dark)").matches)
    })
  })
</script>